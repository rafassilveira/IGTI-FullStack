{"ast":null,"code":"var _jsxFileName = \"/workspace/IGTI-FullStack/Modulo 3 - React/aula-05/react-counter-01/src/components/Counter/Counter.js\";\nimport React, { Component } from 'react'; // Para usar o css, criamos um arquivo no mesmo diretorio desse arquivo e importamos,\n// é importante usar o nomeArquivo.module.css para o react entender o modulos\n\nimport css from './counter.module.css';\nexport default class Counter extends Component {\n  // para usar o Component temos que usar o constructor junto com o super\n  constructor() {\n    super(); // Aqui estamos criando atributos, que não sao muito comum em react, normalmente se usa o state que será explicado em aula futuras // para criar atributos é obrigátorio o uso de 'this'\n\n    this.handleClick = () => {\n      console.log('Click');\n      this.currentCounter--;\n      this.render();\n    };\n\n    this.currentCounter = 2;\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // no JSX é alguns atributos os nomes foram modificados, por isso usamos className ao inves de class\n      // O que está em {} são códigos JS dentro do JSX \n      // Para usar o css, bastat usar o nome de como importamos o css (css) e o nome da classe \n      React.createElement(\"div\", {\n        className: css.counterContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleClick,\n        className: \"waves-effect waves-light btn red darken-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, \"-\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: css.counterValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, this.currentCounter), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"waves-effect  waves-light btn green darken-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, \"+\"))\n    );\n  }\n\n}","map":{"version":3,"sources":["/workspace/IGTI-FullStack/Modulo 3 - React/aula-05/react-counter-01/src/components/Counter/Counter.js"],"names":["React","Component","css","Counter","constructor","handleClick","console","log","currentCounter","render","counterContainer","counterValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AAEA,OAAOC,GAAP,MAAgB,sBAAhB;AAEA,eAAe,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC/C;AACEG,EAAAA,WAAW,GAAG;AACZ,YADY,CAEhB;;AAFgB,SAMdC,WANc,GAMA,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAKC,cAAL;AACA,WAAKC,MAAL;AACD,KAVa;;AAGZ,SAAKD,cAAL,GAAsB,CAAtB;AACD;;AAQDC,EAAAA,MAAM,GAAG;AACP;AAAA;AACF;AACA;AACA;AACI;AAAK,QAAA,SAAS,EAAEP,GAAG,CAACQ,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,OAAO,EAAE,KAAKL,WADhB;AAEE,QAAA,SAAS,EAAC,2CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAME;AAAM,QAAA,SAAS,EAAEH,GAAG,CAACS,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoC,KAAKH,cAAzC,CANF,eAOE;AACE,QAAA,SAAS,EAAC,8CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF;AAJF;AAmBD;;AAlC4C","sourcesContent":["import React, { Component } from 'react';\n// Para usar o css, criamos um arquivo no mesmo diretorio desse arquivo e importamos,\n// é importante usar o nomeArquivo.module.css para o react entender o modulos\n\nimport css from './counter.module.css';\n\nexport default class Counter extends Component {\n// para usar o Component temos que usar o constructor junto com o super\n  constructor() {\n    super();\n// Aqui estamos criando atributos, que não sao muito comum em react, normalmente se usa o state que será explicado em aula futuras // para criar atributos é obrigátorio o uso de 'this'\n    this.currentCounter = 2;\n  }\n\n  handleClick = () => {\n    console.log('Click');\n    this.currentCounter--;\n    this.render();\n  };\n\n  render() {\n    return (\n\t\t// no JSX é alguns atributos os nomes foram modificados, por isso usamos className ao inves de class\n\t\t// O que está em {} são códigos JS dentro do JSX \n\t\t// Para usar o css, bastat usar o nome de como importamos o css (css) e o nome da classe \n      <div className={css.counterContainer}>\n        <button\n          onClick={this.handleClick}\n          className=\"waves-effect waves-light btn red darken-4\">\n          -\n        </button>\n        <span className={css.counterValue}>{this.currentCounter}</span>\n        <button\n          className=\"waves-effect \n   waves-light btn green darken-4\"\n        >\n          +\n        </button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}